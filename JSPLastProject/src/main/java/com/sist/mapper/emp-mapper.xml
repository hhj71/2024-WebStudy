<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="com.sist.mapper.emp-mapper">
 	<!--  JOIN : 포함클래스 (has-a) -->
 	<!--  
 	 while(rs.next())
       {
          EmpVO vo=new EmpVO();
          vo.setEmpno(rs.getString(1))
          ..
          vo.getDvo().setDname(rs.getString(7))
          =====================
       }
       
       SELECT empno,ename,job
       SELECT ename,job,empno
 	
 	JOIN property => 변수명  column=> 대입하는 값
 	-->
 	<resultMap type="com.sist.vo.EmpVO" id="empMap">
 		<result property="dvo.dname"  column="dname"/>
 		<!--  
 				vo.getDvo(). setDname(rs.getString("dname"))
 		 -->
 		 <result property="dvo.loc" column="loc"/>
 		 <!-- 
 		 		vo.getDvo().setLoc(rs.getString("loc"))
 		  -->
 		  <!-- 
 		  지금은 자동 셋팅 된다
 		  <result property="ename" column= 
 		   -->
 		   <result property="svo.grade" column="grade"/>
 	</resultMap>
 	     <select id="empListData"  resultMap="empMap">
 	     <!--  값들을 모아야 하기 때문에 resultMap  -->
 	     		SELECT empno, ename, job, TO_CHAR(hiredate, 'YYYY-MM-DD') as dbday,
 	     					sal, emp.deptno, dname, loc, grade
 	     		FROM emp, dept, salgrade
 	     		WHERE emp.deptno = dept.deptno
 	     		AND sal BETWEEN losal AND hisal
 	     </select>
 	     <select id="empFindData" resultType="EmpVO" parameterType="hashmap">
 	     	SELECT empno, ename, job, TO_CHAR(hiredate, 'YYYY-MM-DD') as dbday,
 	     				sal, deptno, comm
 	     	FROM emp
 	     	<!-- 
 	     			WHERE ename IN('','','','','',....)
 	     			
 	     			<trim>	의 기능 : 1. 추가 2. 삭제(제거)
 	     										prefix : 처음 추가 => 접두어
 	     										suffix : 마지막 추가 => 접미어
 	     										prefixOverrides => 앞에 데이터 제거
 	     										suffixOverrides => 뒤에 데이터 제거
 	     			SELECT * FROM emp
 	     			WHERE
 	     			<if test="column=='name'">
 	     				OR name LIKE ~	
 	     			</if>
 	     										
 	     										
 	     	 -->
 	     	 <trim prefix="WHERE ename IN(" suffix=")" suffixOverrides=")">
 	     	 
 	     	 </trim>
 	     </select>
 	     <select id="empEnameList" resultType="String">
 	     	SELECT ename FROM emp
 	     </select>
</mapper>